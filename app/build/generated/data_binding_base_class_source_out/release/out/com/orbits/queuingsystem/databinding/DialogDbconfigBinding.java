// Generated by view binder compiler. Do not edit!
package com.orbits.queuingsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.orbits.queuingsystem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogDbconfigBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox checkboxAll;

  @NonNull
  public final CheckBox chkAndroid;

  @NonNull
  public final CheckBox chkBranchName;

  @NonNull
  public final CheckBox chkLogo;

  @NonNull
  public final CheckBox chkRestart;

  @NonNull
  public final CheckBox chkScroll;

  @NonNull
  public final CheckBox chkServiceName;

  @NonNull
  public final CheckBox chkShowTime;

  @NonNull
  public final CheckBox chkShowTimeCheckbox;

  @NonNull
  public final LinearLayout dialogBox;

  @NonNull
  public final EditText editCounterNo;

  @NonNull
  public final EditText editQueueTCPPort;

  @NonNull
  public final EditText editServerName;

  @NonNull
  public final EditText editTimeToRestart;

  @NonNull
  public final Spinner spinnerAdCounter;

  @NonNull
  public final Spinner spinnerMiddle;

  @NonNull
  public final Spinner spinnerTop;

  @NonNull
  public final TextView textBranchName;

  @NonNull
  public final TextView textCheck;

  @NonNull
  public final TextView textCounterNo;

  @NonNull
  public final TextView textQueueTcpPort;

  @NonNull
  public final TextView textServerName;

  @NonNull
  public final TextView textServiceName;

  @NonNull
  public final TextView txtCurrentTime;

  private DialogDbconfigBinding(@NonNull LinearLayout rootView, @NonNull CheckBox checkboxAll,
      @NonNull CheckBox chkAndroid, @NonNull CheckBox chkBranchName, @NonNull CheckBox chkLogo,
      @NonNull CheckBox chkRestart, @NonNull CheckBox chkScroll, @NonNull CheckBox chkServiceName,
      @NonNull CheckBox chkShowTime, @NonNull CheckBox chkShowTimeCheckbox,
      @NonNull LinearLayout dialogBox, @NonNull EditText editCounterNo,
      @NonNull EditText editQueueTCPPort, @NonNull EditText editServerName,
      @NonNull EditText editTimeToRestart, @NonNull Spinner spinnerAdCounter,
      @NonNull Spinner spinnerMiddle, @NonNull Spinner spinnerTop, @NonNull TextView textBranchName,
      @NonNull TextView textCheck, @NonNull TextView textCounterNo,
      @NonNull TextView textQueueTcpPort, @NonNull TextView textServerName,
      @NonNull TextView textServiceName, @NonNull TextView txtCurrentTime) {
    this.rootView = rootView;
    this.checkboxAll = checkboxAll;
    this.chkAndroid = chkAndroid;
    this.chkBranchName = chkBranchName;
    this.chkLogo = chkLogo;
    this.chkRestart = chkRestart;
    this.chkScroll = chkScroll;
    this.chkServiceName = chkServiceName;
    this.chkShowTime = chkShowTime;
    this.chkShowTimeCheckbox = chkShowTimeCheckbox;
    this.dialogBox = dialogBox;
    this.editCounterNo = editCounterNo;
    this.editQueueTCPPort = editQueueTCPPort;
    this.editServerName = editServerName;
    this.editTimeToRestart = editTimeToRestart;
    this.spinnerAdCounter = spinnerAdCounter;
    this.spinnerMiddle = spinnerMiddle;
    this.spinnerTop = spinnerTop;
    this.textBranchName = textBranchName;
    this.textCheck = textCheck;
    this.textCounterNo = textCounterNo;
    this.textQueueTcpPort = textQueueTcpPort;
    this.textServerName = textServerName;
    this.textServiceName = textServiceName;
    this.txtCurrentTime = txtCurrentTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogDbconfigBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogDbconfigBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_dbconfig, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogDbconfigBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkboxAll;
      CheckBox checkboxAll = ViewBindings.findChildViewById(rootView, id);
      if (checkboxAll == null) {
        break missingId;
      }

      id = R.id.chkAndroid;
      CheckBox chkAndroid = ViewBindings.findChildViewById(rootView, id);
      if (chkAndroid == null) {
        break missingId;
      }

      id = R.id.chkBranchName;
      CheckBox chkBranchName = ViewBindings.findChildViewById(rootView, id);
      if (chkBranchName == null) {
        break missingId;
      }

      id = R.id.chkLogo;
      CheckBox chkLogo = ViewBindings.findChildViewById(rootView, id);
      if (chkLogo == null) {
        break missingId;
      }

      id = R.id.chkRestart;
      CheckBox chkRestart = ViewBindings.findChildViewById(rootView, id);
      if (chkRestart == null) {
        break missingId;
      }

      id = R.id.chkScroll;
      CheckBox chkScroll = ViewBindings.findChildViewById(rootView, id);
      if (chkScroll == null) {
        break missingId;
      }

      id = R.id.chkServiceName;
      CheckBox chkServiceName = ViewBindings.findChildViewById(rootView, id);
      if (chkServiceName == null) {
        break missingId;
      }

      id = R.id.chkShowTime;
      CheckBox chkShowTime = ViewBindings.findChildViewById(rootView, id);
      if (chkShowTime == null) {
        break missingId;
      }

      id = R.id.chkShowTimeCheckbox;
      CheckBox chkShowTimeCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (chkShowTimeCheckbox == null) {
        break missingId;
      }

      LinearLayout dialogBox = (LinearLayout) rootView;

      id = R.id.editCounterNo;
      EditText editCounterNo = ViewBindings.findChildViewById(rootView, id);
      if (editCounterNo == null) {
        break missingId;
      }

      id = R.id.editQueueTCP_Port;
      EditText editQueueTCPPort = ViewBindings.findChildViewById(rootView, id);
      if (editQueueTCPPort == null) {
        break missingId;
      }

      id = R.id.editServerName;
      EditText editServerName = ViewBindings.findChildViewById(rootView, id);
      if (editServerName == null) {
        break missingId;
      }

      id = R.id.editTimeToRestart;
      EditText editTimeToRestart = ViewBindings.findChildViewById(rootView, id);
      if (editTimeToRestart == null) {
        break missingId;
      }

      id = R.id.spinnerAdCounter;
      Spinner spinnerAdCounter = ViewBindings.findChildViewById(rootView, id);
      if (spinnerAdCounter == null) {
        break missingId;
      }

      id = R.id.spinner_middle;
      Spinner spinnerMiddle = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMiddle == null) {
        break missingId;
      }

      id = R.id.spinner_top;
      Spinner spinnerTop = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTop == null) {
        break missingId;
      }

      id = R.id.textBranchName;
      TextView textBranchName = ViewBindings.findChildViewById(rootView, id);
      if (textBranchName == null) {
        break missingId;
      }

      id = R.id.textCheck;
      TextView textCheck = ViewBindings.findChildViewById(rootView, id);
      if (textCheck == null) {
        break missingId;
      }

      id = R.id.textCounterNo;
      TextView textCounterNo = ViewBindings.findChildViewById(rootView, id);
      if (textCounterNo == null) {
        break missingId;
      }

      id = R.id.textQueueTcpPort;
      TextView textQueueTcpPort = ViewBindings.findChildViewById(rootView, id);
      if (textQueueTcpPort == null) {
        break missingId;
      }

      id = R.id.textServerName;
      TextView textServerName = ViewBindings.findChildViewById(rootView, id);
      if (textServerName == null) {
        break missingId;
      }

      id = R.id.textServiceName;
      TextView textServiceName = ViewBindings.findChildViewById(rootView, id);
      if (textServiceName == null) {
        break missingId;
      }

      id = R.id.txtCurrentTime;
      TextView txtCurrentTime = ViewBindings.findChildViewById(rootView, id);
      if (txtCurrentTime == null) {
        break missingId;
      }

      return new DialogDbconfigBinding((LinearLayout) rootView, checkboxAll, chkAndroid,
          chkBranchName, chkLogo, chkRestart, chkScroll, chkServiceName, chkShowTime,
          chkShowTimeCheckbox, dialogBox, editCounterNo, editQueueTCPPort, editServerName,
          editTimeToRestart, spinnerAdCounter, spinnerMiddle, spinnerTop, textBranchName, textCheck,
          textCounterNo, textQueueTcpPort, textServerName, textServiceName, txtCurrentTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
